{
  "contractName": "Purchase",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor",
      "payable": true
    },
    {
      "inputs": [],
      "name": "InvalidState",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyBuyer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlySeller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ValueNotEven",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Aborted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "ItemReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "PurchaseConfirmed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "SellerRefunded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "buyer",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "seller",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum Purchase.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "value",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "abort",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmPurchase",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "confirmReceived",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "refundSeller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidState\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyBuyer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlySeller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ValueNotEven\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Aborted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ItemReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PurchaseConfirmed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"SellerRefunded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"abort\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyer\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmPurchase\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundSeller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seller\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum Purchase.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"value\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidState()\":[{\"notice\":\"The function cannot be called at the current state.\"}],\"OnlyBuyer()\":[{\"notice\":\"Only the buyer can call this function.\"}],\"OnlySeller()\":[{\"notice\":\"Only the seller can call this function.\"}],\"ValueNotEven()\":[{\"notice\":\"The provided value has to be even.\"}]},\"kind\":\"user\",\"methods\":{\"abort()\":{\"notice\":\"Abort the purchase and reclaim the ether. Can only be called by the seller before the contract is locked.\"},\"confirmPurchase()\":{\"notice\":\"Confirm the purchase as buyer. Transaction has to include `2 * value` ether. The ether will be locked until confirmReceived is called.\"},\"confirmReceived()\":{\"notice\":\"Confirm that you (the buyer) received the item. This will release the locked ether.\"},\"refundSeller()\":{\"notice\":\"This function refunds the seller, i.e. pays back the locked funds of the seller.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Purchase.sol\":\"Purchase\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Purchase.sol\":{\"keccak256\":\"0xbd9dc806cf51c15a9a15086a55807b64f0fe8d6b6fb5ba7ce3651ceca757107a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9c7ca0e2fb8729f80784bf7e3a758d3cd76ac8d907f84876c84d95edcea9a2dc\",\"dweb:/ipfs/QmS2sUL8nMGyXMjM754qjkauSSC8HP1WbWF7zqHmcK4XUa\"]}},\"version\":1}",
  "bytecode": "0x608060405233600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600234610052919061010c565b600081905550346000546002610068919061013d565b1461009f576040517fbe3e4c4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610197565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610117826100a4565b9150610122836100a4565b925082610132576101316100ae565b5b828204905092915050565b6000610148826100a4565b9150610153836100a4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561018c5761018b6100dd565b5b828202905092915050565b610a5c806101a66000396000f3fe6080604052600436106100865760003560e01c80637150d8ae116100595780637150d8ae1461012357806373fac6f01461014e578063c19d93fb14610165578063c7981b1b14610190578063d6960697146101a757610086565b806308551a531461008b57806320965255146100b657806335a063b4146100e15780633fa4f245146100f8575b600080fd5b34801561009757600080fd5b506100a06101b1565b6040516100ad91906108bc565b60405180910390f35b3480156100c257600080fd5b506100cb6101d7565b6040516100d891906108f0565b60405180910390f35b3480156100ed57600080fd5b506100f66101e0565b005b34801561010457600080fd5b5061010d610398565b60405161011a91906108f0565b60405180910390f35b34801561012f57600080fd5b5061013861039e565b60405161014591906108bc565b60405180910390f35b34801561015a57600080fd5b506101636103c4565b005b34801561017157600080fd5b5061017a61057d565b6040516101879190610982565b60405180910390f35b34801561019c57600080fd5b506101a5610590565b005b6101af610756565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610267576040517f85d1f72600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080600381111561027c5761027b61090b565b5b600260149054906101000a900460ff16600381111561029e5761029d61090b565b5b146102d5576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f72c874aeff0b183a56e2b79c71b46e1aed4dee5e09862134b8821ba2fddbf8bf60405160405180910390a16003600260146101000a81548160ff021916908360038111156103275761032661090b565b5b0217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610394573d6000803e3d6000fd5b5050565b60005481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461044b576040517f86efbb5500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018060038111156104605761045f61090b565b5b600260149054906101000a900460ff1660038111156104825761048161090b565b5b146104b9576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fe89152acd703c9d8c7d28829d443260b411454d45394e7995815140c8cbcbcf760405160405180910390a160028060146101000a81548160ff0219169083600381111561050a5761050961090b565b5b0217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6000549081150290604051600060405180830381858888f19350505050158015610579573d6000803e3d6000fd5b5050565b600260149054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610617576040517f85d1f72600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280600381111561062c5761062b61090b565b5b600260149054906101000a900460ff16600381111561064e5761064d61090b565b5b14610685576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7ffda69c32bcfdba840a167777906b173b607eb8b4d8853b97a80d26e613d858db60405160405180910390a16003600260146101000a81548160ff021916908360038111156106d7576106d661090b565b5b0217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600054600361072791906109cc565b9081150290604051600060405180830381858888f19350505050158015610752573d6000803e3d6000fd5b5050565b600080600381111561076b5761076a61090b565b5b600260149054906101000a900460ff16600381111561078d5761078c61090b565b5b146107c4576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005460026107d391906109cc565b3414806107df57600080fd5b7fd5d55c8a68912e9a110618df8d5e2e83b8d83211c57a8ddd1203df92885dc88160405160405180910390a133600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260146101000a81548160ff021916908360038111156108725761087161090b565b5b02179055505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108a68261087b565b9050919050565b6108b68161089b565b82525050565b60006020820190506108d160008301846108ad565b92915050565b6000819050919050565b6108ea816108d7565b82525050565b600060208201905061090560008301846108e1565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811061094b5761094a61090b565b5b50565b600081905061095c8261093a565b919050565b600061096c8261094e565b9050919050565b61097c81610961565b82525050565b60006020820190506109976000830184610973565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109d7826108d7565b91506109e2836108d7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610a1b57610a1a61099d565b5b82820290509291505056fea2646970667358221220234a1ccc7a39f9566b267bd188ed9cecf95915d565a0800279671444bc865c5664736f6c634300080a0033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c80637150d8ae116100595780637150d8ae1461012357806373fac6f01461014e578063c19d93fb14610165578063c7981b1b14610190578063d6960697146101a757610086565b806308551a531461008b57806320965255146100b657806335a063b4146100e15780633fa4f245146100f8575b600080fd5b34801561009757600080fd5b506100a06101b1565b6040516100ad91906108bc565b60405180910390f35b3480156100c257600080fd5b506100cb6101d7565b6040516100d891906108f0565b60405180910390f35b3480156100ed57600080fd5b506100f66101e0565b005b34801561010457600080fd5b5061010d610398565b60405161011a91906108f0565b60405180910390f35b34801561012f57600080fd5b5061013861039e565b60405161014591906108bc565b60405180910390f35b34801561015a57600080fd5b506101636103c4565b005b34801561017157600080fd5b5061017a61057d565b6040516101879190610982565b60405180910390f35b34801561019c57600080fd5b506101a5610590565b005b6101af610756565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610267576040517f85d1f72600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080600381111561027c5761027b61090b565b5b600260149054906101000a900460ff16600381111561029e5761029d61090b565b5b146102d5576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f72c874aeff0b183a56e2b79c71b46e1aed4dee5e09862134b8821ba2fddbf8bf60405160405180910390a16003600260146101000a81548160ff021916908360038111156103275761032661090b565b5b0217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610394573d6000803e3d6000fd5b5050565b60005481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461044b576040517f86efbb5500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018060038111156104605761045f61090b565b5b600260149054906101000a900460ff1660038111156104825761048161090b565b5b146104b9576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fe89152acd703c9d8c7d28829d443260b411454d45394e7995815140c8cbcbcf760405160405180910390a160028060146101000a81548160ff0219169083600381111561050a5761050961090b565b5b0217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6000549081150290604051600060405180830381858888f19350505050158015610579573d6000803e3d6000fd5b5050565b600260149054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610617576040517f85d1f72600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600280600381111561062c5761062b61090b565b5b600260149054906101000a900460ff16600381111561064e5761064d61090b565b5b14610685576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7ffda69c32bcfdba840a167777906b173b607eb8b4d8853b97a80d26e613d858db60405160405180910390a16003600260146101000a81548160ff021916908360038111156106d7576106d661090b565b5b0217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600054600361072791906109cc565b9081150290604051600060405180830381858888f19350505050158015610752573d6000803e3d6000fd5b5050565b600080600381111561076b5761076a61090b565b5b600260149054906101000a900460ff16600381111561078d5761078c61090b565b5b146107c4576040517fbaf3f0f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005460026107d391906109cc565b3414806107df57600080fd5b7fd5d55c8a68912e9a110618df8d5e2e83b8d83211c57a8ddd1203df92885dc88160405160405180910390a133600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260146101000a81548160ff021916908360038111156108725761087161090b565b5b02179055505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108a68261087b565b9050919050565b6108b68161089b565b82525050565b60006020820190506108d160008301846108ad565b92915050565b6000819050919050565b6108ea816108d7565b82525050565b600060208201905061090560008301846108e1565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811061094b5761094a61090b565b5b50565b600081905061095c8261093a565b919050565b600061096c8261094e565b9050919050565b61097c81610961565b82525050565b60006020820190506109976000830184610973565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109d7826108d7565b91506109e2836108d7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610a1b57610a1a61099d565b5b82820290509291505056fea2646970667358221220234a1ccc7a39f9566b267bd188ed9cecf95915d565a0800279671444bc865c5664736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1004:1",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:32:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:16:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "73:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:1",
                "type": ""
              }
            ],
            "src": "7:77:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "118:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "135:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "138:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "128:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "128:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "128:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "232:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "235:4:1",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "225:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "225:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "225:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "256:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "259:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "249:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "249:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "249:15:1"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "90:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "304:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "321:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "324:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "314:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "314:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "314:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "418:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "421:4:1",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "411:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "411:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "411:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "442:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "445:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "435:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "435:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "435:15:1"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "276:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "504:143:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "514:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "537:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "519:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "519:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "514:1:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "548:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "571:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "553:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "553:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "548:1:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "595:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "597:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "597:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "597:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "592:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "585:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "585:9:1"
                  },
                  "nodeType": "YulIf",
                  "src": "582:35:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "627:14:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "636:1:1"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "639:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "632:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "632:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "627:1:1"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "493:1:1",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "496:1:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "502:1:1",
                "type": ""
              }
            ],
            "src": "462:185:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "701:300:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "711:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "734:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "716:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "716:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "711:1:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "745:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "768:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "750:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "750:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "745:1:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "943:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "945:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "945:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "945:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "855:1:1"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "848:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "848:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "841:6:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "841:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "863:1:1"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "870:66:1",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "938:1:1"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "866:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "866:74:1"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "860:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "860:81:1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "837:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "837:105:1"
                  },
                  "nodeType": "YulIf",
                  "src": "834:131:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "975:20:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "990:1:1"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "993:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "986:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "986:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "975:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "684:1:1",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "687:1:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "693:7:1",
                "type": ""
              }
            ],
            "src": "653:348:1"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n}\n",
      "id": 1,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2589:1",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:81:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:65:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "77:5:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "84:42:1",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "73:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "73:54:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:1",
                "type": ""
              }
            ],
            "src": "7:126:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "192:51:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "202:35:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "231:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "213:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "213:24:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "202:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "174:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "184:7:1",
                "type": ""
              }
            ],
            "src": "139:104:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "330:61:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "347:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "378:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "352:25:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "352:32:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "340:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "340:45:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "340:45:1"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "318:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "325:3:1",
                "type": ""
              }
            ],
            "src": "249:142:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:140:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "533:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "544:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "529:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "529:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "521:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "617:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "630:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "641:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "626:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "626:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "557:59:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "557:87:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "557:87:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "483:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "495:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "506:4:1",
                "type": ""
              }
            ],
            "src": "397:254:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "702:32:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "712:16:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "723:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "712:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "684:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "694:7:1",
                "type": ""
              }
            ],
            "src": "657:77:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "805:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "822:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "845:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "827:17:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "827:24:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "815:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "815:37:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "815:37:1"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "793:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "800:3:1",
                "type": ""
              }
            ],
            "src": "740:118:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "962:124:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "972:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "984:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "995:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "980:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "972:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1052:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1065:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1076:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1061:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1061:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1008:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1008:71:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1008:71:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "934:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "946:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "957:4:1",
                "type": ""
              }
            ],
            "src": "864:222:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1120:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1137:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1140:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1130:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1130:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1130:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1234:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1237:4:1",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1227:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1227:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1227:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1258:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1261:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1251:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1251:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1251:15:1"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "1092:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1329:62:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1363:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x21",
                            "nodeType": "YulIdentifier",
                            "src": "1365:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1365:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1365:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1352:5:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1359:1:1",
                            "type": "",
                            "value": "4"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1349:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1349:12:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1342:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1342:20:1"
                  },
                  "nodeType": "YulIf",
                  "src": "1339:46:1"
                }
              ]
            },
            "name": "validator_assert_t_enum$_State_$12",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1322:5:1",
                "type": ""
              }
            ],
            "src": "1278:113:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1450:74:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1460:16:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1471:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1460:7:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1512:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_State_$12",
                      "nodeType": "YulIdentifier",
                      "src": "1477:34:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1477:41:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1477:41:1"
                }
              ]
            },
            "name": "cleanup_t_enum$_State_$12",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1432:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1442:7:1",
                "type": ""
              }
            ],
            "src": "1397:127:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1596:61:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1606:45:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1645:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_State_$12",
                      "nodeType": "YulIdentifier",
                      "src": "1619:25:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1619:32:1"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1606:9:1"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_State_$12_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1576:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1586:9:1",
                "type": ""
              }
            ],
            "src": "1530:127:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1734:72:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1751:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1793:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_State_$12_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "1756:36:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1756:43:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1744:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1744:56:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1744:56:1"
                }
              ]
            },
            "name": "abi_encode_t_enum$_State_$12_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1722:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1729:3:1",
                "type": ""
              }
            ],
            "src": "1663:143:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1916:130:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1926:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1938:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1949:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1934:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1934:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1926:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2012:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2025:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2036:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2021:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2021:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_State_$12_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1962:49:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1962:77:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1962:77:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_State_$12__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1888:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1900:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1911:4:1",
                "type": ""
              }
            ],
            "src": "1812:234:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2080:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2097:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2100:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2090:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2090:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2090:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2194:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2197:4:1",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2187:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2187:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2187:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2218:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2221:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2211:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2211:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2211:15:1"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "2052:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2286:300:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2296:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2319:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2301:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2301:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "2296:1:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2330:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2353:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2335:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2335:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "2330:1:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2528:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2530:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2530:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2530:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "2440:1:1"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2433:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2433:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2426:6:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2426:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "2448:1:1"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2455:66:1",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "2523:1:1"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "2451:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2451:74:1"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2445:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2445:81:1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2422:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2422:105:1"
                  },
                  "nodeType": "YulIf",
                  "src": "2419:131:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2560:20:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2575:1:1"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2578:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "2571:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2571:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "2560:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2269:1:1",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2272:1:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "2278:7:1",
                "type": ""
              }
            ],
            "src": "2238:348:1"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_State_$12(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_State_$12(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_State_$12(value)\n    }\n\n    function convert_t_enum$_State_$12_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_State_$12(value)\n    }\n\n    function abi_encode_t_enum$_State_$12_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_State_$12_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_State_$12__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_State_$12_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n}\n",
      "id": 1,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "60:3389:0:-:0;;;1389:10;1372:6;;:28;;;;;;;;;;;;;;;;;;1430:1;1418:9;:13;;;;:::i;:::-;1410:5;:21;;;;1460:9;1450:5;;1446:1;:9;;;;:::i;:::-;1445:24;1441:63;;1490:14;;;;;;;;;;;;;;1441:63;60:3389;;7:77:1;44:7;73:5;62:16;;7:77;;;:::o;90:180::-;138:77;135:1;128:88;235:4;232:1;225:15;259:4;256:1;249:15;276:180;324:77;321:1;314:88;421:4;418:1;411:15;445:4;442:1;435:15;462:185;502:1;519:20;537:1;519:20;:::i;:::-;514:25;;553:20;571:1;553:20;:::i;:::-;548:25;;592:1;582:35;;597:18;;:::i;:::-;582:35;639:1;636;632:9;627:14;;462:185;;;;:::o;653:348::-;693:7;716:20;734:1;716:20;:::i;:::-;711:25;;750:20;768:1;750:20;:::i;:::-;745:25;;938:1;870:66;866:74;863:1;860:81;855:1;848:9;841:17;837:105;834:131;;;945:18;;:::i;:::-;834:131;993:1;990;986:9;975:20;;653:348;;;;:::o;60:3389:0:-;;;;;;;",
  "deployedSourceMap": "60:3389:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;107:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1517:76;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1729:376;;;;;;;;;;;;;:::i;:::-;;84:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;142:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2631:353;;;;;;;;;;;;;:::i;:::-;;313:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3087:360;;;;;;;;;;;;;:::i;:::-;;2278:247;;;:::i;:::-;;107:29;;;;;;;;;;;;;:::o;1517:76::-;1558:4;1581:5;;1574:12;;1517:76;:::o;1729:376::-;885:6;;;;;;;;;;;871:20;;:10;:20;;;867:57;;912:12;;;;;;;;;;;;;;867:57;1798:13:::1;1002:6;993:15;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:15;;;;;;;;:::i;:::-;;;989:54;;1029:14;;;;;;;;;;;;;;989:54;1832:9:::2;;;;;;;;;;1859:14;1851:5;;:22;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2060:6;;;;;;;;;;;:15;;:38;2076:21;2060:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;934:1:::1;1729:376::o:0;84:17::-;;;;:::o;142:28::-;;;;;;;;;;;;;:::o;2631:353::-;774:5;;;;;;;;;;;760:19;;:10;:19;;;756:55;;800:11;;;;;;;;;;;;;;756:55;2709:12:::1;1002:6;993:15;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:15;;;;;;;;:::i;:::-;;;989:54;;1029:14;;;;;;;;;;;;;;989:54;2742:14:::2;;;;;;;;;;2932:13;2924:5:::0;::::2;:21;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2956:5;;;;;;;;;;;:14;;:21;2971:5;;2956:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;821:1:::1;2631:353::o:0;313:18::-;;;;;;;;;;;;;:::o;3087:360::-;885:6;;;;;;;;;;;871:20;;:10;:20;;;867:57;;912:12;;;;;;;;;;;;;;867:57;3163:13:::1;1002:6;993:15;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:15;;;;;;;;:::i;:::-;;;989:54;;1029:14;;;;;;;;;;;;;;989:54;3197:16:::2;;;;;;;;;;3389:14;3381:5;;:22;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;3414:6;;;;;;;;;;;:15;;:26;3434:5;;3430:1;:9;;;;:::i;:::-;3414:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;934:1:::1;3087:360::o:0;2278:247::-;2338:13;1002:6;993:15;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:15;;;;;;;;:::i;:::-;;;989:54;;1029:14;;;;;;;;;;;;;;989:54;2389:5:::1;;2385:1;:9;;;;:::i;:::-;2371;:24;392:10;384:19;;;::::0;::::1;;2432::::2;;;;;;;;;;2477:10;2461:5;;:27;;;;;;;;;;;;;;;;;;2506:12;2498:5;;:20;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1053:1:::1;2278:247:::0;:::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:104::-;184:7;213:24;231:5;213:24;:::i;:::-;202:35;;139:104;;;:::o;249:142::-;352:32;378:5;352:32;:::i;:::-;347:3;340:45;249:142;;:::o;397:254::-;506:4;544:2;533:9;529:18;521:26;;557:87;641:1;630:9;626:17;617:6;557:87;:::i;:::-;397:254;;;;:::o;657:77::-;694:7;723:5;712:16;;657:77;;;:::o;740:118::-;827:24;845:5;827:24;:::i;:::-;822:3;815:37;740:118;;:::o;864:222::-;957:4;995:2;984:9;980:18;972:26;;1008:71;1076:1;1065:9;1061:17;1052:6;1008:71;:::i;:::-;864:222;;;;:::o;1092:180::-;1140:77;1137:1;1130:88;1237:4;1234:1;1227:15;1261:4;1258:1;1251:15;1278:113;1359:1;1352:5;1349:12;1339:46;;1365:18;;:::i;:::-;1339:46;1278:113;:::o;1397:127::-;1442:7;1471:5;1460:16;;1477:41;1512:5;1477:41;:::i;:::-;1397:127;;;:::o;1530:::-;1586:9;1619:32;1645:5;1619:32;:::i;:::-;1606:45;;1530:127;;;:::o;1663:143::-;1756:43;1793:5;1756:43;:::i;:::-;1751:3;1744:56;1663:143;;:::o;1812:234::-;1911:4;1949:2;1938:9;1934:18;1926:26;;1962:77;2036:1;2025:9;2021:17;2012:6;1962:77;:::i;:::-;1812:234;;;;:::o;2052:180::-;2100:77;2097:1;2090:88;2197:4;2194:1;2187:15;2221:4;2218:1;2211:15;2238:348;2278:7;2301:20;2319:1;2301:20;:::i;:::-;2296:25;;2335:20;2353:1;2335:20;:::i;:::-;2330:25;;2523:1;2455:66;2451:74;2448:1;2445:81;2440:1;2433:9;2426:17;2422:105;2419:131;;;2530:18;;:::i;:::-;2419:131;2578:1;2575;2571:9;2560:20;;2238:348;;;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.4;\ncontract Purchase {\n    uint public value;\n    address payable public seller;\n    address payable public buyer;\n    enum State { Created, Locked, Release, Inactive }\n    // The state variable has a default value of the first member, `State.created`\n    State public state;\n\n    modifier condition(bool condition_) {\n        require(condition_);\n        _;\n    }\n\n    /// Only the buyer can call this function.\n    error OnlyBuyer();\n    /// Only the seller can call this function.\n    error OnlySeller();\n    /// The function cannot be called at the current state.\n    error InvalidState();\n    /// The provided value has to be even.\n    error ValueNotEven();\n\n    modifier onlyBuyer() {\n        if (msg.sender != buyer)\n            revert OnlyBuyer();\n        _;\n    }\n\n    modifier onlySeller() {\n        if (msg.sender != seller)\n            revert OnlySeller();\n        _;\n    }\n\n    modifier inState(State state_) {\n        if (state != state_)\n            revert InvalidState();\n        _;\n    }\n\n    event Aborted();\n    event PurchaseConfirmed();\n    event ItemReceived();\n    event SellerRefunded();\n\n    // Ensure that `msg.value` is an even number.\n    // Division will truncate if it is an odd number.\n    // Check via multiplication that it wasn't an odd number.\n    constructor() payable {\n        seller = payable(msg.sender);\n        value = msg.value / 2;\n        if ((2 * value) != msg.value)\n            revert ValueNotEven();\n    }\n\n    function getValue() public view returns (uint) {\n        return value;\n    }\n\n    /// Abort the purchase and reclaim the ether.\n    /// Can only be called by the seller before\n    /// the contract is locked.\n    function abort()\n        external\n        onlySeller\n        inState(State.Created)\n    {\n        emit Aborted();\n        state = State.Inactive;\n        // We use transfer here directly. It is\n        // reentrancy-safe, because it is the\n        // last call in this function and we\n        // already changed the state.\n        seller.transfer(address(this).balance);\n    }\n\n    /// Confirm the purchase as buyer.\n    /// Transaction has to include `2 * value` ether.\n    /// The ether will be locked until confirmReceived\n    /// is called.\n    function confirmPurchase()\n        external\n        inState(State.Created)\n        condition(msg.value == (2 * value))\n        payable\n    {\n        emit PurchaseConfirmed();\n        buyer = payable(msg.sender);\n        state = State.Locked;\n    }\n\n    /// Confirm that you (the buyer) received the item.\n    /// This will release the locked ether.\n    function confirmReceived()\n        external\n        onlyBuyer\n        inState(State.Locked)\n    {\n        emit ItemReceived();\n        // It is important to change the state first because\n        // otherwise, the contracts called using `send` below\n        // can call in again here.\n        state = State.Release;\n\n        buyer.transfer(value);\n    }\n\n    /// This function refunds the seller, i.e.\n    /// pays back the locked funds of the seller.\n    function refundSeller()\n        external\n        onlySeller\n        inState(State.Release)\n    {\n        emit SellerRefunded();\n        // It is important to change the state first because\n        // otherwise, the contracts called using `send` below\n        // can call in again here.\n        state = State.Inactive;\n\n        seller.transfer(3 * value);\n    }\n}",
  "sourcePath": "/Users/xinhengs/Develop/BlockChain/smart-contracts-tutorial/remote-purchase/contracts/Purchase.sol",
  "ast": {
    "absolutePath": "project:/contracts/Purchase.sol",
    "exportedSymbols": {
      "Purchase": [
        237
      ]
    },
    "id": 238,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Purchase",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 237,
        "linearizedBaseContracts": [
          237
        ],
        "name": "Purchase",
        "nameLocation": "69:8:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "3fa4f245",
            "id": 3,
            "mutability": "mutable",
            "name": "value",
            "nameLocation": "96:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 237,
            "src": "84:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "84:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "08551a53",
            "id": 5,
            "mutability": "mutable",
            "name": "seller",
            "nameLocation": "130:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 237,
            "src": "107:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 4,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "107:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7150d8ae",
            "id": 7,
            "mutability": "mutable",
            "name": "buyer",
            "nameLocation": "165:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 237,
            "src": "142:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 6,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "142:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Purchase.State",
            "id": 12,
            "members": [
              {
                "id": 8,
                "name": "Created",
                "nameLocation": "189:7:0",
                "nodeType": "EnumValue",
                "src": "189:7:0"
              },
              {
                "id": 9,
                "name": "Locked",
                "nameLocation": "198:6:0",
                "nodeType": "EnumValue",
                "src": "198:6:0"
              },
              {
                "id": 10,
                "name": "Release",
                "nameLocation": "206:7:0",
                "nodeType": "EnumValue",
                "src": "206:7:0"
              },
              {
                "id": 11,
                "name": "Inactive",
                "nameLocation": "215:8:0",
                "nodeType": "EnumValue",
                "src": "215:8:0"
              }
            ],
            "name": "State",
            "nameLocation": "181:5:0",
            "nodeType": "EnumDefinition",
            "src": "176:49:0"
          },
          {
            "constant": false,
            "functionSelector": "c19d93fb",
            "id": 15,
            "mutability": "mutable",
            "name": "state",
            "nameLocation": "326:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 237,
            "src": "313:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_State_$12",
              "typeString": "enum Purchase.State"
            },
            "typeName": {
              "id": 14,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13,
                "name": "State",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 12,
                "src": "313:5:0"
              },
              "referencedDeclaration": 12,
              "src": "313:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_State_$12",
                "typeString": "enum Purchase.State"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 24,
              "nodeType": "Block",
              "src": "374:47:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 20,
                        "name": "condition_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "392:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 19,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "384:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "384:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22,
                  "nodeType": "ExpressionStatement",
                  "src": "384:19:0"
                },
                {
                  "id": 23,
                  "nodeType": "PlaceholderStatement",
                  "src": "413:1:0"
                }
              ]
            },
            "id": 25,
            "name": "condition",
            "nameLocation": "347:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17,
                  "mutability": "mutable",
                  "name": "condition_",
                  "nameLocation": "362:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "357:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "357:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "356:17:0"
            },
            "src": "338:83:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "documentation": {
              "id": 26,
              "nodeType": "StructuredDocumentation",
              "src": "427:42:0",
              "text": "Only the buyer can call this function."
            },
            "id": 28,
            "name": "OnlyBuyer",
            "nameLocation": "480:9:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "489:2:0"
            },
            "src": "474:18:0"
          },
          {
            "documentation": {
              "id": 29,
              "nodeType": "StructuredDocumentation",
              "src": "497:43:0",
              "text": "Only the seller can call this function."
            },
            "id": 31,
            "name": "OnlySeller",
            "nameLocation": "551:10:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "561:2:0"
            },
            "src": "545:19:0"
          },
          {
            "documentation": {
              "id": 32,
              "nodeType": "StructuredDocumentation",
              "src": "569:55:0",
              "text": "The function cannot be called at the current state."
            },
            "id": 34,
            "name": "InvalidState",
            "nameLocation": "635:12:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "647:2:0"
            },
            "src": "629:21:0"
          },
          {
            "documentation": {
              "id": 35,
              "nodeType": "StructuredDocumentation",
              "src": "655:38:0",
              "text": "The provided value has to be even."
            },
            "id": 37,
            "name": "ValueNotEven",
            "nameLocation": "704:12:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "716:2:0"
            },
            "src": "698:21:0"
          },
          {
            "body": {
              "id": 48,
              "nodeType": "Block",
              "src": "746:83:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 39,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "760:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "760:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 41,
                      "name": "buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "774:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "760:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46,
                  "nodeType": "IfStatement",
                  "src": "756:55:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 43,
                        "name": "OnlyBuyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "800:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 44,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "800:11:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 45,
                    "nodeType": "RevertStatement",
                    "src": "793:18:0"
                  }
                },
                {
                  "id": 47,
                  "nodeType": "PlaceholderStatement",
                  "src": "821:1:0"
                }
              ]
            },
            "id": 49,
            "name": "onlyBuyer",
            "nameLocation": "734:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "743:2:0"
            },
            "src": "725:104:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 60,
              "nodeType": "Block",
              "src": "857:85:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 51,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "871:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 52,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "871:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 53,
                      "name": "seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "885:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "871:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 58,
                  "nodeType": "IfStatement",
                  "src": "867:57:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 55,
                        "name": "OnlySeller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "912:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 56,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "912:12:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 57,
                    "nodeType": "RevertStatement",
                    "src": "905:19:0"
                  }
                },
                {
                  "id": 59,
                  "nodeType": "PlaceholderStatement",
                  "src": "934:1:0"
                }
              ]
            },
            "id": 61,
            "name": "onlySeller",
            "nameLocation": "844:10:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "854:2:0"
            },
            "src": "835:107:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 74,
              "nodeType": "Block",
              "src": "979:82:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_State_$12",
                      "typeString": "enum Purchase.State"
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 66,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "993:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$12",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 67,
                      "name": "state_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "1002:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$12",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "src": "993:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 72,
                  "nodeType": "IfStatement",
                  "src": "989:54:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 69,
                        "name": "InvalidState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "1029:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 70,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1029:14:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 71,
                    "nodeType": "RevertStatement",
                    "src": "1022:21:0"
                  }
                },
                {
                  "id": 73,
                  "nodeType": "PlaceholderStatement",
                  "src": "1053:1:0"
                }
              ]
            },
            "id": 75,
            "name": "inState",
            "nameLocation": "957:7:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64,
                  "mutability": "mutable",
                  "name": "state_",
                  "nameLocation": "971:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "965:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$12",
                    "typeString": "enum Purchase.State"
                  },
                  "typeName": {
                    "id": 63,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12,
                      "src": "965:5:0"
                    },
                    "referencedDeclaration": 12,
                    "src": "965:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$12",
                      "typeString": "enum Purchase.State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "964:14:0"
            },
            "src": "948:113:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 77,
            "name": "Aborted",
            "nameLocation": "1073:7:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1080:2:0"
            },
            "src": "1067:16:0"
          },
          {
            "anonymous": false,
            "id": 79,
            "name": "PurchaseConfirmed",
            "nameLocation": "1094:17:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1111:2:0"
            },
            "src": "1088:26:0"
          },
          {
            "anonymous": false,
            "id": 81,
            "name": "ItemReceived",
            "nameLocation": "1125:12:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1137:2:0"
            },
            "src": "1119:21:0"
          },
          {
            "anonymous": false,
            "id": 83,
            "name": "SellerRefunded",
            "nameLocation": "1151:14:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1165:2:0"
            },
            "src": "1145:23:0"
          },
          {
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "1362:149:0",
              "statements": [
                {
                  "expression": {
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 86,
                      "name": "seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "1372:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 89,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1389:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1389:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1381:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 87,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1381:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1381:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1372:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "1372:28:0"
                },
                {
                  "expression": {
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 94,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "1410:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 98,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 95,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1418:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "1418:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1430:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "1418:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1410:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1410:21:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1446:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 102,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "1450:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1446:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 104,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1445:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 105,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1460:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1460:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1445:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 111,
                  "nodeType": "IfStatement",
                  "src": "1441:63:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 108,
                        "name": "ValueNotEven",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "1490:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1490:14:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 110,
                    "nodeType": "RevertStatement",
                    "src": "1483:21:0"
                  }
                }
              ]
            },
            "id": 113,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1351:2:0"
            },
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1362:0:0"
            },
            "scope": 237,
            "src": "1340:171:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 120,
              "nodeType": "Block",
              "src": "1564:29:0",
              "statements": [
                {
                  "expression": {
                    "id": 118,
                    "name": "value",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3,
                    "src": "1581:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 117,
                  "id": 119,
                  "nodeType": "Return",
                  "src": "1574:12:0"
                }
              ]
            },
            "functionSelector": "20965255",
            "id": 121,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValue",
            "nameLocation": "1526:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1534:2:0"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "1558:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1558:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1557:6:0"
            },
            "scope": 237,
            "src": "1517:76:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 149,
              "nodeType": "Block",
              "src": "1817:288:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 131,
                      "name": "Aborted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "1832:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1832:9:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 133,
                  "nodeType": "EmitStatement",
                  "src": "1827:14:0"
                },
                {
                  "expression": {
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 134,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "1851:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$12",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 135,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1859:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$12_$",
                          "typeString": "type(enum Purchase.State)"
                        }
                      },
                      "id": 136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Inactive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "1859:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$12",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "src": "1851:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$12",
                      "typeString": "enum Purchase.State"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "1851:22:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 144,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "2084:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Purchase_$237",
                                "typeString": "contract Purchase"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Purchase_$237",
                                "typeString": "contract Purchase"
                              }
                            ],
                            "id": 143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2076:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 142,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2076:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2076:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "2076:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 139,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "2060:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2060:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2060:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 148,
                  "nodeType": "ExpressionStatement",
                  "src": "2060:38:0"
                }
              ]
            },
            "documentation": {
              "id": 122,
              "nodeType": "StructuredDocumentation",
              "src": "1599:125:0",
              "text": "Abort the purchase and reclaim the ether.\n Can only be called by the seller before\n the contract is locked."
            },
            "functionSelector": "35a063b4",
            "id": 150,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 125,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 124,
                  "name": "onlySeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 61,
                  "src": "1771:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1771:10:0"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 127,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "1798:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$12_$",
                        "typeString": "type(enum Purchase.State)"
                      }
                    },
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Created",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8,
                    "src": "1798:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$12",
                      "typeString": "enum Purchase.State"
                    }
                  }
                ],
                "id": 129,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 126,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75,
                  "src": "1790:7:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1790:22:0"
              }
            ],
            "name": "abort",
            "nameLocation": "1738:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1743:2:0"
            },
            "returnParameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1817:0:0"
            },
            "scope": 237,
            "src": "1729:376:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 183,
              "nodeType": "Block",
              "src": "2417:108:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 167,
                      "name": "PurchaseConfirmed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "2432:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2432:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 169,
                  "nodeType": "EmitStatement",
                  "src": "2427:24:0"
                },
                {
                  "expression": {
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 170,
                      "name": "buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "2461:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 173,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2477:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2477:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2469:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 171,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2469:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2469:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2461:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "2461:27:0"
                },
                {
                  "expression": {
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 178,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "2498:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$12",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 179,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "2506:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$12_$",
                          "typeString": "type(enum Purchase.State)"
                        }
                      },
                      "id": 180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "2506:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$12",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "src": "2498:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$12",
                      "typeString": "enum Purchase.State"
                    }
                  },
                  "id": 182,
                  "nodeType": "ExpressionStatement",
                  "src": "2498:20:0"
                }
              ]
            },
            "documentation": {
              "id": 151,
              "nodeType": "StructuredDocumentation",
              "src": "2111:162:0",
              "text": "Confirm the purchase as buyer.\n Transaction has to include `2 * value` ether.\n The ether will be locked until confirmReceived\n is called."
            },
            "functionSelector": "d6960697",
            "id": 184,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 154,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "2338:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$12_$",
                        "typeString": "type(enum Purchase.State)"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Created",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8,
                    "src": "2338:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$12",
                      "typeString": "enum Purchase.State"
                    }
                  }
                ],
                "id": 156,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 153,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75,
                  "src": "2330:7:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2330:22:0"
              },
              {
                "arguments": [
                  {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 158,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2371:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2371:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2385:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 161,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "2389:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2385:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 163,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2384:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2371:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 165,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 157,
                  "name": "condition",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25,
                  "src": "2361:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2361:35:0"
              }
            ],
            "name": "confirmPurchase",
            "nameLocation": "2287:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2302:2:0"
            },
            "returnParameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2417:0:0"
            },
            "scope": 237,
            "src": "2278:247:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 208,
              "nodeType": "Block",
              "src": "2727:257:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 194,
                      "name": "ItemReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "2742:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2742:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 196,
                  "nodeType": "EmitStatement",
                  "src": "2737:19:0"
                },
                {
                  "expression": {
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 197,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "2924:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$12",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 198,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "2932:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$12_$",
                          "typeString": "type(enum Purchase.State)"
                        }
                      },
                      "id": 199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Release",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "2932:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$12",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "src": "2924:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$12",
                      "typeString": "enum Purchase.State"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "2924:21:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 205,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3,
                        "src": "2971:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 202,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "2956:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2956:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2956:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "2956:21:0"
                }
              ]
            },
            "documentation": {
              "id": 185,
              "nodeType": "StructuredDocumentation",
              "src": "2531:95:0",
              "text": "Confirm that you (the buyer) received the item.\n This will release the locked ether."
            },
            "functionSelector": "73fac6f0",
            "id": 209,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 188,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 187,
                  "name": "onlyBuyer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 49,
                  "src": "2683:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2683:9:0"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 190,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "2709:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$12_$",
                        "typeString": "type(enum Purchase.State)"
                      }
                    },
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Locked",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 9,
                    "src": "2709:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$12",
                      "typeString": "enum Purchase.State"
                    }
                  }
                ],
                "id": 192,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 189,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75,
                  "src": "2701:7:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2701:21:0"
              }
            ],
            "name": "confirmReceived",
            "nameLocation": "2640:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2655:2:0"
            },
            "returnParameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2727:0:0"
            },
            "scope": 237,
            "src": "2631:353:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 235,
              "nodeType": "Block",
              "src": "3182:265:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 219,
                      "name": "SellerRefunded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "3197:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3197:16:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 221,
                  "nodeType": "EmitStatement",
                  "src": "3192:21:0"
                },
                {
                  "expression": {
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 222,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "3381:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$12",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 223,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "3389:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$12_$",
                          "typeString": "type(enum Purchase.State)"
                        }
                      },
                      "id": 224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Inactive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "3389:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$12",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "src": "3381:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$12",
                      "typeString": "enum Purchase.State"
                    }
                  },
                  "id": 226,
                  "nodeType": "ExpressionStatement",
                  "src": "3381:22:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "33",
                          "id": 230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3430:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 231,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "3434:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3430:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 227,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "3414:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3414:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3414:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 234,
                  "nodeType": "ExpressionStatement",
                  "src": "3414:26:0"
                }
              ]
            },
            "documentation": {
              "id": 210,
              "nodeType": "StructuredDocumentation",
              "src": "2990:92:0",
              "text": "This function refunds the seller, i.e.\n pays back the locked funds of the seller."
            },
            "functionSelector": "c7981b1b",
            "id": 236,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 213,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 212,
                  "name": "onlySeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 61,
                  "src": "3136:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3136:10:0"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 215,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "3163:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$12_$",
                        "typeString": "type(enum Purchase.State)"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Release",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10,
                    "src": "3163:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$12",
                      "typeString": "enum Purchase.State"
                    }
                  }
                ],
                "id": 217,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 214,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75,
                  "src": "3155:7:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3155:22:0"
              }
            ],
            "name": "refundSeller",
            "nameLocation": "3096:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3108:2:0"
            },
            "returnParameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3182:0:0"
            },
            "scope": 237,
            "src": "3087:360:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 238,
        "src": "60:3389:0",
        "usedErrors": [
          28,
          31,
          34,
          37
        ]
      }
    ],
    "src": "36:3413:0"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Purchase.sol",
    "exportedSymbols": {
      "Purchase": [
        237
      ]
    },
    "id": 238,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Purchase",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 237,
        "linearizedBaseContracts": [
          237
        ],
        "name": "Purchase",
        "nameLocation": "69:8:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "3fa4f245",
            "id": 3,
            "mutability": "mutable",
            "name": "value",
            "nameLocation": "96:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 237,
            "src": "84:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "84:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "08551a53",
            "id": 5,
            "mutability": "mutable",
            "name": "seller",
            "nameLocation": "130:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 237,
            "src": "107:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 4,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "107:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7150d8ae",
            "id": 7,
            "mutability": "mutable",
            "name": "buyer",
            "nameLocation": "165:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 237,
            "src": "142:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 6,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "142:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Purchase.State",
            "id": 12,
            "members": [
              {
                "id": 8,
                "name": "Created",
                "nameLocation": "189:7:0",
                "nodeType": "EnumValue",
                "src": "189:7:0"
              },
              {
                "id": 9,
                "name": "Locked",
                "nameLocation": "198:6:0",
                "nodeType": "EnumValue",
                "src": "198:6:0"
              },
              {
                "id": 10,
                "name": "Release",
                "nameLocation": "206:7:0",
                "nodeType": "EnumValue",
                "src": "206:7:0"
              },
              {
                "id": 11,
                "name": "Inactive",
                "nameLocation": "215:8:0",
                "nodeType": "EnumValue",
                "src": "215:8:0"
              }
            ],
            "name": "State",
            "nameLocation": "181:5:0",
            "nodeType": "EnumDefinition",
            "src": "176:49:0"
          },
          {
            "constant": false,
            "functionSelector": "c19d93fb",
            "id": 15,
            "mutability": "mutable",
            "name": "state",
            "nameLocation": "326:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 237,
            "src": "313:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_State_$12",
              "typeString": "enum Purchase.State"
            },
            "typeName": {
              "id": 14,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13,
                "name": "State",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 12,
                "src": "313:5:0"
              },
              "referencedDeclaration": 12,
              "src": "313:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_State_$12",
                "typeString": "enum Purchase.State"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 24,
              "nodeType": "Block",
              "src": "374:47:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 20,
                        "name": "condition_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "392:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 19,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "384:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "384:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22,
                  "nodeType": "ExpressionStatement",
                  "src": "384:19:0"
                },
                {
                  "id": 23,
                  "nodeType": "PlaceholderStatement",
                  "src": "413:1:0"
                }
              ]
            },
            "id": 25,
            "name": "condition",
            "nameLocation": "347:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17,
                  "mutability": "mutable",
                  "name": "condition_",
                  "nameLocation": "362:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "357:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "357:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "356:17:0"
            },
            "src": "338:83:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "documentation": {
              "id": 26,
              "nodeType": "StructuredDocumentation",
              "src": "427:42:0",
              "text": "Only the buyer can call this function."
            },
            "id": 28,
            "name": "OnlyBuyer",
            "nameLocation": "480:9:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "489:2:0"
            },
            "src": "474:18:0"
          },
          {
            "documentation": {
              "id": 29,
              "nodeType": "StructuredDocumentation",
              "src": "497:43:0",
              "text": "Only the seller can call this function."
            },
            "id": 31,
            "name": "OnlySeller",
            "nameLocation": "551:10:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "561:2:0"
            },
            "src": "545:19:0"
          },
          {
            "documentation": {
              "id": 32,
              "nodeType": "StructuredDocumentation",
              "src": "569:55:0",
              "text": "The function cannot be called at the current state."
            },
            "id": 34,
            "name": "InvalidState",
            "nameLocation": "635:12:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "647:2:0"
            },
            "src": "629:21:0"
          },
          {
            "documentation": {
              "id": 35,
              "nodeType": "StructuredDocumentation",
              "src": "655:38:0",
              "text": "The provided value has to be even."
            },
            "id": 37,
            "name": "ValueNotEven",
            "nameLocation": "704:12:0",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "716:2:0"
            },
            "src": "698:21:0"
          },
          {
            "body": {
              "id": 48,
              "nodeType": "Block",
              "src": "746:83:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 39,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "760:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "760:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 41,
                      "name": "buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "774:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "760:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46,
                  "nodeType": "IfStatement",
                  "src": "756:55:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 43,
                        "name": "OnlyBuyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "800:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 44,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "800:11:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 45,
                    "nodeType": "RevertStatement",
                    "src": "793:18:0"
                  }
                },
                {
                  "id": 47,
                  "nodeType": "PlaceholderStatement",
                  "src": "821:1:0"
                }
              ]
            },
            "id": 49,
            "name": "onlyBuyer",
            "nameLocation": "734:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "743:2:0"
            },
            "src": "725:104:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 60,
              "nodeType": "Block",
              "src": "857:85:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 51,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "871:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 52,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "871:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 53,
                      "name": "seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "885:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "871:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 58,
                  "nodeType": "IfStatement",
                  "src": "867:57:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 55,
                        "name": "OnlySeller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "912:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 56,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "912:12:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 57,
                    "nodeType": "RevertStatement",
                    "src": "905:19:0"
                  }
                },
                {
                  "id": 59,
                  "nodeType": "PlaceholderStatement",
                  "src": "934:1:0"
                }
              ]
            },
            "id": 61,
            "name": "onlySeller",
            "nameLocation": "844:10:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "854:2:0"
            },
            "src": "835:107:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 74,
              "nodeType": "Block",
              "src": "979:82:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_State_$12",
                      "typeString": "enum Purchase.State"
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 66,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "993:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$12",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 67,
                      "name": "state_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "1002:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$12",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "src": "993:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 72,
                  "nodeType": "IfStatement",
                  "src": "989:54:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 69,
                        "name": "InvalidState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "1029:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 70,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1029:14:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 71,
                    "nodeType": "RevertStatement",
                    "src": "1022:21:0"
                  }
                },
                {
                  "id": 73,
                  "nodeType": "PlaceholderStatement",
                  "src": "1053:1:0"
                }
              ]
            },
            "id": 75,
            "name": "inState",
            "nameLocation": "957:7:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64,
                  "mutability": "mutable",
                  "name": "state_",
                  "nameLocation": "971:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "965:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$12",
                    "typeString": "enum Purchase.State"
                  },
                  "typeName": {
                    "id": 63,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 62,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12,
                      "src": "965:5:0"
                    },
                    "referencedDeclaration": 12,
                    "src": "965:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$12",
                      "typeString": "enum Purchase.State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "964:14:0"
            },
            "src": "948:113:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "id": 77,
            "name": "Aborted",
            "nameLocation": "1073:7:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1080:2:0"
            },
            "src": "1067:16:0"
          },
          {
            "anonymous": false,
            "id": 79,
            "name": "PurchaseConfirmed",
            "nameLocation": "1094:17:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1111:2:0"
            },
            "src": "1088:26:0"
          },
          {
            "anonymous": false,
            "id": 81,
            "name": "ItemReceived",
            "nameLocation": "1125:12:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1137:2:0"
            },
            "src": "1119:21:0"
          },
          {
            "anonymous": false,
            "id": 83,
            "name": "SellerRefunded",
            "nameLocation": "1151:14:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1165:2:0"
            },
            "src": "1145:23:0"
          },
          {
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "1362:149:0",
              "statements": [
                {
                  "expression": {
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 86,
                      "name": "seller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "1372:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 89,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1389:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1389:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1381:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 87,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1381:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1381:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1372:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "1372:28:0"
                },
                {
                  "expression": {
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 94,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "1410:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 98,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 95,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1418:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "1418:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1430:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "1418:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1410:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1410:21:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1446:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 102,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "1450:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1446:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 104,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1445:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 105,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1460:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1460:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1445:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 111,
                  "nodeType": "IfStatement",
                  "src": "1441:63:0",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 108,
                        "name": "ValueNotEven",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "1490:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1490:14:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 110,
                    "nodeType": "RevertStatement",
                    "src": "1483:21:0"
                  }
                }
              ]
            },
            "id": 113,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1351:2:0"
            },
            "returnParameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1362:0:0"
            },
            "scope": 237,
            "src": "1340:171:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 120,
              "nodeType": "Block",
              "src": "1564:29:0",
              "statements": [
                {
                  "expression": {
                    "id": 118,
                    "name": "value",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3,
                    "src": "1581:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 117,
                  "id": 119,
                  "nodeType": "Return",
                  "src": "1574:12:0"
                }
              ]
            },
            "functionSelector": "20965255",
            "id": 121,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValue",
            "nameLocation": "1526:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1534:2:0"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "1558:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1558:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1557:6:0"
            },
            "scope": 237,
            "src": "1517:76:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 149,
              "nodeType": "Block",
              "src": "1817:288:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 131,
                      "name": "Aborted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "1832:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1832:9:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 133,
                  "nodeType": "EmitStatement",
                  "src": "1827:14:0"
                },
                {
                  "expression": {
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 134,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "1851:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$12",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 135,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1859:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$12_$",
                          "typeString": "type(enum Purchase.State)"
                        }
                      },
                      "id": 136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Inactive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "1859:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$12",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "src": "1851:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$12",
                      "typeString": "enum Purchase.State"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "1851:22:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 144,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "2084:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Purchase_$237",
                                "typeString": "contract Purchase"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Purchase_$237",
                                "typeString": "contract Purchase"
                              }
                            ],
                            "id": 143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2076:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 142,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2076:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2076:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "2076:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 139,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "2060:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2060:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2060:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 148,
                  "nodeType": "ExpressionStatement",
                  "src": "2060:38:0"
                }
              ]
            },
            "documentation": {
              "id": 122,
              "nodeType": "StructuredDocumentation",
              "src": "1599:125:0",
              "text": "Abort the purchase and reclaim the ether.\n Can only be called by the seller before\n the contract is locked."
            },
            "functionSelector": "35a063b4",
            "id": 150,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 125,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 124,
                  "name": "onlySeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 61,
                  "src": "1771:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1771:10:0"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 127,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "1798:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$12_$",
                        "typeString": "type(enum Purchase.State)"
                      }
                    },
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Created",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8,
                    "src": "1798:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$12",
                      "typeString": "enum Purchase.State"
                    }
                  }
                ],
                "id": 129,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 126,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75,
                  "src": "1790:7:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1790:22:0"
              }
            ],
            "name": "abort",
            "nameLocation": "1738:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1743:2:0"
            },
            "returnParameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1817:0:0"
            },
            "scope": 237,
            "src": "1729:376:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 183,
              "nodeType": "Block",
              "src": "2417:108:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 167,
                      "name": "PurchaseConfirmed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "2432:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2432:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 169,
                  "nodeType": "EmitStatement",
                  "src": "2427:24:0"
                },
                {
                  "expression": {
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 170,
                      "name": "buyer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "2461:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 173,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2477:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2477:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2469:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 171,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2469:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2469:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2461:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "2461:27:0"
                },
                {
                  "expression": {
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 178,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "2498:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$12",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 179,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "2506:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$12_$",
                          "typeString": "type(enum Purchase.State)"
                        }
                      },
                      "id": 180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Locked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "2506:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$12",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "src": "2498:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$12",
                      "typeString": "enum Purchase.State"
                    }
                  },
                  "id": 182,
                  "nodeType": "ExpressionStatement",
                  "src": "2498:20:0"
                }
              ]
            },
            "documentation": {
              "id": 151,
              "nodeType": "StructuredDocumentation",
              "src": "2111:162:0",
              "text": "Confirm the purchase as buyer.\n Transaction has to include `2 * value` ether.\n The ether will be locked until confirmReceived\n is called."
            },
            "functionSelector": "d6960697",
            "id": 184,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 154,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "2338:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$12_$",
                        "typeString": "type(enum Purchase.State)"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Created",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 8,
                    "src": "2338:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$12",
                      "typeString": "enum Purchase.State"
                    }
                  }
                ],
                "id": 156,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 153,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75,
                  "src": "2330:7:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2330:22:0"
              },
              {
                "arguments": [
                  {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 158,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2371:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2371:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2385:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 161,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "2389:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2385:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 163,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2384:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2371:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 165,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 157,
                  "name": "condition",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25,
                  "src": "2361:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2361:35:0"
              }
            ],
            "name": "confirmPurchase",
            "nameLocation": "2287:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2302:2:0"
            },
            "returnParameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2417:0:0"
            },
            "scope": 237,
            "src": "2278:247:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 208,
              "nodeType": "Block",
              "src": "2727:257:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 194,
                      "name": "ItemReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "2742:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2742:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 196,
                  "nodeType": "EmitStatement",
                  "src": "2737:19:0"
                },
                {
                  "expression": {
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 197,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "2924:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$12",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 198,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "2932:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$12_$",
                          "typeString": "type(enum Purchase.State)"
                        }
                      },
                      "id": 199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Release",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "2932:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$12",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "src": "2924:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$12",
                      "typeString": "enum Purchase.State"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "2924:21:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 205,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3,
                        "src": "2971:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 202,
                        "name": "buyer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "2956:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2956:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2956:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "2956:21:0"
                }
              ]
            },
            "documentation": {
              "id": 185,
              "nodeType": "StructuredDocumentation",
              "src": "2531:95:0",
              "text": "Confirm that you (the buyer) received the item.\n This will release the locked ether."
            },
            "functionSelector": "73fac6f0",
            "id": 209,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 188,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 187,
                  "name": "onlyBuyer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 49,
                  "src": "2683:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2683:9:0"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 190,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "2709:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$12_$",
                        "typeString": "type(enum Purchase.State)"
                      }
                    },
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Locked",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 9,
                    "src": "2709:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$12",
                      "typeString": "enum Purchase.State"
                    }
                  }
                ],
                "id": 192,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 189,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75,
                  "src": "2701:7:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2701:21:0"
              }
            ],
            "name": "confirmReceived",
            "nameLocation": "2640:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2655:2:0"
            },
            "returnParameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2727:0:0"
            },
            "scope": 237,
            "src": "2631:353:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 235,
              "nodeType": "Block",
              "src": "3182:265:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 219,
                      "name": "SellerRefunded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83,
                      "src": "3197:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3197:16:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 221,
                  "nodeType": "EmitStatement",
                  "src": "3192:21:0"
                },
                {
                  "expression": {
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 222,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "3381:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$12",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 223,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "3389:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$12_$",
                          "typeString": "type(enum Purchase.State)"
                        }
                      },
                      "id": 224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Inactive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11,
                      "src": "3389:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$12",
                        "typeString": "enum Purchase.State"
                      }
                    },
                    "src": "3381:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$12",
                      "typeString": "enum Purchase.State"
                    }
                  },
                  "id": 226,
                  "nodeType": "ExpressionStatement",
                  "src": "3381:22:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "33",
                          "id": 230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3430:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 231,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "3434:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3430:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 227,
                        "name": "seller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "3414:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3414:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3414:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 234,
                  "nodeType": "ExpressionStatement",
                  "src": "3414:26:0"
                }
              ]
            },
            "documentation": {
              "id": 210,
              "nodeType": "StructuredDocumentation",
              "src": "2990:92:0",
              "text": "This function refunds the seller, i.e.\n pays back the locked funds of the seller."
            },
            "functionSelector": "c7981b1b",
            "id": 236,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 213,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 212,
                  "name": "onlySeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 61,
                  "src": "3136:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3136:10:0"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 215,
                      "name": "State",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "3163:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_State_$12_$",
                        "typeString": "type(enum Purchase.State)"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Release",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10,
                    "src": "3163:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$12",
                      "typeString": "enum Purchase.State"
                    }
                  }
                ],
                "id": 217,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 214,
                  "name": "inState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 75,
                  "src": "3155:7:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3155:22:0"
              }
            ],
            "name": "refundSeller",
            "nameLocation": "3096:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3108:2:0"
            },
            "returnParameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3182:0:0"
            },
            "scope": 237,
            "src": "3087:360:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 238,
        "src": "60:3389:0",
        "usedErrors": [
          28,
          31,
          34,
          37
        ]
      }
    ],
    "src": "36:3413:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {
    "5780": {
      "events": {},
      "links": {},
      "address": "0x6cF423257Eca4E3F997BA66eab123a49a08F7D9f",
      "transactionHash": "0xadacb62781b4326c9f3c4a880b165fdcc4bde154990496eac6aee2817af53c1f"
    },
    "5781": {
      "events": {},
      "links": {},
      "address": "0xF3A93C68ef00Ad267a304071F53aaB72c80012cf",
      "transactionHash": "0x1e04d450547aa56197885047126d6d769d7177bb224a1ed635f3616c1a65582c"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-07-16T05:25:50.476Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "errors": {
      "InvalidState()": [
        {
          "notice": "The function cannot be called at the current state."
        }
      ],
      "OnlyBuyer()": [
        {
          "notice": "Only the buyer can call this function."
        }
      ],
      "OnlySeller()": [
        {
          "notice": "Only the seller can call this function."
        }
      ],
      "ValueNotEven()": [
        {
          "notice": "The provided value has to be even."
        }
      ]
    },
    "kind": "user",
    "methods": {
      "abort()": {
        "notice": "Abort the purchase and reclaim the ether. Can only be called by the seller before the contract is locked."
      },
      "confirmPurchase()": {
        "notice": "Confirm the purchase as buyer. Transaction has to include `2 * value` ether. The ether will be locked until confirmReceived is called."
      },
      "confirmReceived()": {
        "notice": "Confirm that you (the buyer) received the item. This will release the locked ether."
      },
      "refundSeller()": {
        "notice": "This function refunds the seller, i.e. pays back the locked funds of the seller."
      }
    },
    "version": 1
  }
}